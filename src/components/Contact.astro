---
interface ContactInfo {
  email: string;
  location: string;
  social: {
    linkedin?: string;
    github?: string;
    twitter?: string;
  };
}

interface Props {
  contactInfo: ContactInfo;
}

const { contactInfo } = Astro.props;
---

<section id="contact" class="py-16">
  <div class="container mx-auto px-6">
    <div class="max-w-3xl mx-auto">
      <h2 class="text-4xl font-bold mb-8 text-center">Get in Touch</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        <div>
          <h3 class="text-2xl font-bold mb-4">Contact Information</h3>
          <div class="space-y-4">
            <div>
              <h4 class="font-bold">Email</h4>
              <p class="text-gray-600 dark:text-gray-300">{contactInfo.email}</p>
            </div>
            <div>
              <h4 class="font-bold">Location</h4>
              <p class="text-gray-600 dark:text-gray-300">{contactInfo.location}</p>
            </div>
            <div>
              <h4 class="font-bold">Social Media</h4>
              <div class="flex space-x-4 mt-2">
                {contactInfo.social.linkedin && (
                  <a href={contactInfo.social.linkedin} class="text-blue-500 hover:text-blue-600">LinkedIn</a>
                )}
                {contactInfo.social.github && (
                  <a href={contactInfo.social.github} class="text-blue-500 hover:text-blue-600">GitHub</a>
                )}
                {contactInfo.social.twitter && (
                  <a href={contactInfo.social.twitter} class="text-blue-500 hover:text-blue-600">Twitter</a>
                )}
              </div>
            </div>
          </div>
        </div>

        <div class="bg-white dark:bg-gray-800 p-6 rounded-lg shadow-lg">
          <h3 class="text-2xl font-bold mb-4">Send a Message</h3>
          <form 
            name="contact" 
            method="POST" 
            data-netlify="true" 
            data-netlify-honeypot="bot-field"
            class="space-y-4"
            netlify
          >
            <input type="hidden" name="form-name" value="contact" />
            <p class="hidden">
              <label>
                Don't fill this out if you're human: <input name="bot-field" />
              </label>
            </p>
            <div>
              <label for="name" class="block text-sm font-medium mb-1">Name</label>
              <input
                type="text"
                id="name"
                name="name"
                class="w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700"
                required
              />
            </div>
            <div>
              <label for="email" class="block text-sm font-medium mb-1">Email</label>
              <input
                type="email"
                id="email"
                name="email"
                class="w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700"
                required
              />
            </div>
            <div>
              <label for="message" class="block text-sm font-medium mb-1">Message</label>
              <textarea
                id="message"
                name="message"
                rows="4"
                class="w-full px-4 py-2 rounded-lg border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-700"
                required
              ></textarea>
            </div>
            <button
              type="submit"
              class="w-full bg-blue-500 text-white px-6 py-3 rounded-lg hover:bg-blue-600 transition"
            >
              Send Message
            </button>
          </form>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // Add form submission handling
  const form = document.querySelector('form[data-netlify="true"]');
  
  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(form as HTMLFormElement);
    
    try {
      // Show loading state
      const submitButton = form?.querySelector('button[type="submit"]');
      if (submitButton) {
        submitButton.textContent = 'Sending...';
        submitButton.disabled = true;
      }

      // Submit the form
      const response = await fetch('/', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: new URLSearchParams(formData as any).toString(),
      });

      if (response.ok) {
        alert('Thank you for your message! I will get back to you soon.');
        (form as HTMLFormElement).reset();
      } else {
        throw new Error('Form submission failed');
      }
    } catch (error) {
      console.error('Error submitting form:', error);
      alert('There was an error sending your message. Please try again.');
    } finally {
      // Reset button state
      const submitButton = form?.querySelector('button[type="submit"]');
      if (submitButton) {
        submitButton.textContent = 'Send Message';
        submitButton.disabled = false;
      }
    }
  });
</script> 